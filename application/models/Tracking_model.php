<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Tracking_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get tracking by tracking_id
     */
    function get_tracking($tracking_id)
    {
        return $this->db->get_where('Tracking',array('tracking_id'=>$tracking_id))->row_array();
    }
    
    /*
     * Get all tracking
     */
    function get_all_tracking($limit=null,$offset=NULL)
    {
         $this->db->limit($limit, $offset);
        return $this->db->get('Tracking')->result_array();
    }
        public function count()
       {
           $this->db->from('Tracking');
          return $this->db->count_all_results();
       }
    /*
     * function to add new tracking
     */
    function add_tracking($params)
    {
        $this->db->insert('Tracking',$params);
        return $this->db->insert_id();
    }
    /*
     * function to add new tracking
     */
    function add_tracking_batch($params)
    {
        $this->db->insert_batch('Tracking',$params);
        return TRUE;
    }
    
    /*
     * function to update tracking
     */
    function update_tracking($tracking_id,$params)
    {
        $this->db->where('tracking_id',$tracking_id);
        $response = $this->db->update('Tracking',$params);
        if($response)
        {
            return "tracking updated successfully";
        }
        else
        {
            return "Error occuring while updating tracking";
        }
    }
    
    /*
     * function to delete tracking
     */
    function delete_tracking($tracking_id)
    {
        $response = $this->db->delete('Tracking',array('tracking_id'=>$tracking_id));
        if($response)
        {
            return "tracking deleted successfully";
        }
        else
        {
            return "Error occuring while deleting tracking";
        }
    }
    
    
      /*
     * Get all bus
     */
    function get_all_bus()
    {
         return $this->db->get('Bus')->result_array();
    }
       /*
     * Get all trip
     */
    function get_all_trips()
    {
         return $this->db->get('Trip')->result_array();
    }
    
      /*
     * Get tracking by search
     */
    function search_tracking($tracking_trip_id,$tracking_bus_id,$tracking_time_stamp,$limit=null,$offset=NULL)
    {
   $tracking_time_stamp1= date('Y-m-d', strtotime($tracking_time_stamp));
        
       $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
      $this->db->where($where)    ;
        $this->db->limit($limit, $offset);
      return $this->db->get_where('Tracking',array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->result_array();
      //  return $query->result();
//        $query = $this->db->get('Tracking');
//        print_r($query);
    }
    function get_tracking_map()
    {
    $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
      $this->db->where($where)    ;
      return $this->db->get_where('Tracking',array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->result_array();
    }
    
      function get_trip($id)
    {
          return $this->db->get_where('Trip',array('trip_bus_id'=>$id))->result_array();
    }
    
      function get_new_lat_lon_with_id($tracking_trip_id,$tracking_bus_id,$tracking_time_stamp,$size)
    {
      $tracking_time_stamp1= date('Y-m-d', strtotime($tracking_time_stamp));
      $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
      $this->db->where($where)    ;
      $this->db->limit(1,$size);
      return $this->db->get_where('Tracking',array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->row_array();
    }
         function get_new_lat_lon_with_id_back($tracking_trip_id,$tracking_bus_id,$tracking_time_stamp,$size)
    {
      $tracking_time_stamp1= date('Y-m-d', strtotime($tracking_time_stamp));
      $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
      $this->db->where($where)    ;
      $this->db->limit(1,$size-1);
      return $this->db->get_where('Tracking',array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->row_array();
    } 
   
        public function count_search($tracking_trip_id,$tracking_bus_id,$tracking_time_stamp)
       {
        $tracking_time_stamp1= date('Y-m-d', strtotime($tracking_time_stamp));
        $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
        $this->db->where($where)    ;
       return $this->db->get_where('Tracking',array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->result_array();
//      return $this->db->count_all_results();
       }
       
       function get_all_tracking_for_map_api($date,$trip)
    {
        
         return $this->db->query("select * from Tracking where DATE(tracking_time_stamp)='$date' AND tracking_trip_id='$trip' order by tracking_id asc")->result_array();
         //   return $this->db->query("select * from Tracking where DATE(tracking_time_stamp)='$date' AND tracking_trip_id='$trip' order by tracking_id asc  limit 350")->result_array();
    }

   function get_lat_long_one_by_one_map($date,$trip,$last_id)
    {
     
//      return $this->db->query("select * from Tracking where tracking_id > '$last_id'  AND DATE(tracking_time_stamp)='$date' AND tracking_trip_id='$trip' order by tracking_id asc limit 2")->result_array();
       return $this->db->query("select * from Tracking where tracking_id > '$last_id'  AND DATE(tracking_time_stamp)='$date' AND tracking_trip_id='$trip' order by tracking_id asc ")->result_array();
    }
      function max_id($date,$trip)
    {
      $max_id=$this->db->query("select MAX(  `tracking_id` ) as max from Tracking where DATE(tracking_time_stamp)='$date' AND tracking_trip_id='$trip'")->result_array();
       if($max_id)
        {
            return $max_id;
        }
    }
    
   function get_tracking_details_for_report($tracking_time_stamp1,$tracking_trip_id,$tracking_bus_id,$table_name)
    {
      $where = "tracking_time_stamp BETWEEN  '$tracking_time_stamp1 00:00:00' AND  '$tracking_time_stamp1 23:59:59'";
      $this->db->where($where)    ;
      return $this->db->get_where($table_name,array('tracking_trip_id'=>$tracking_trip_id,'tracking_bus_id'=>$tracking_bus_id))->result_array();
    }
    
    function is_finished_trip($date,$trip_id) {
        $count=$this->db->query("select count( *) as count from Finish_trip_details where DATE(finish_time_stamp)='$date' AND finish_trip_id='$trip_id'")->row_array();
        if($count['count']>0){
            return TRUE;
        } else {
            return FALSE;
        }
        
    }
    
     function add_Last_location_details($params)
    {
        $this->db->insert('Last_location_details',$params);
        return $this->db->insert_id();
    }
    
        /*
     * function to delete tracking
     */
    function delete_Last_location_details($bus_id,$trip_id)
    {
        $response = $this->db->delete('Last_location_details',array('tracking_bus_id'=>$bus_id,'tracking_trip_id'=>$trip_id));
       
        
    }
     function select_tracking_values_before_7($date) {
        return $this->db->query("SELECT * FROM  `Tracking` WHERE  `tracking_time_stamp` <= (  '$date' ) ")->result_array();
     }
       /*
     * function to add new tracking
     */
    function add_copy_tracking($params)
    {
        $this->db->insert('Copy_tracking',$params);
        return $this->db->insert_id();
    }
    
//    function delete_befor_date_values($date)
//    {
//        $this->db->where('id <', $id);
//        return $this->db->delete("DELETE FROM `Tracking` WHERE `tracking_time_stamp` <= (  '$date' )");
//     }
    
    function delete_before_date_values($date)
    {
     return  $response = $this->db->delete('Tracking',array('tracking_time_stamp <='=>$date));
      
    } 
    
     function copy_and_save_values_before_7()
    {
         $sql=" insert into Copy_tracking  SELECT * FROM `Tracking` WHERE date(`tracking_time_stamp`) < date(DATE_SUB(date(now()),INTERVAL 7 DAY))";
         return $this->db->query($sql);
    }
     function delete_values_before_7()
    {
         $sql="DELETE FROM `Tracking` WHERE date(`tracking_time_stamp`) < date(DATE_SUB(date(now()),INTERVAL 7 DAY))";
         return $this->db->query($sql);
    }
    
 }

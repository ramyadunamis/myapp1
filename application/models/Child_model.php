<?php

/*
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */

class Child_model extends CI_Model {

    function __construct() {
        parent::__construct();
        $this->load->model('Setting_model');
    }

    /*
     * Get child by child_id
     */

    function get_child($child_id) {
        return $this->db->get_where('Child', array('child_id' => $child_id))->row_array();
    }

    /*
     * Get all child
     */

    function get_all_child() {

        return $this->db->get('Child')->result_array();
    }

    /*
     * Get all child
     */

    function get_all_child_index($limit = null, $offset = NULL) {
//         $this->db->select('*');
//            $this->db->from('Child a'); 
//            $this->db->join('Bus b', 'b.bus_id=a.child_bus_no_pickup', 'left');
//            $this->db->join('Trip c', 'c.trip_id=a.child_trip_no_pickup', 'left');
//         $this->db->limit($limit, $offset);
//          $query = $this->db->get(); 
//        return $query->result_array();
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array();
    }

    /*
     * function to add new child
     */

    function add_child($params) {
                 $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set); 
        $this->db->insert('Child', $params); 
        return $this->db->insert_id();
                
    }

    /*
     * function to update child
     */

    function update_child($child_id, $params) {
         $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set);  
        $this->db->where('child_id', $child_id);
        $response = $this->db->update('Child', $params);
        if ($response) {
            return "child updated successfully";
        } else {
            return "Error occuring while updating child";
        }
    }
    function update_child_reg_no($child_reg_no, $params) {
         $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set);  
        $this->db->where('child_reg_no', $child_reg_no);
        $response = $this->db->update('Child', $params);
        if ($response) {
            return "child updated successfully";
        } else {
            return "Error occuring while updating child";
        }
    }

    /*
     * function to delete child
     */

    function delete_child($child_id) {
         $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set);  
        $response = $this->db->delete('Child', array('child_id' => $child_id));
        if ($response) {
            return "child deleted successfully";
        } else {
            return "Error occuring while deleting child";
        }
    }

    /*
     * function to status child
     */

    function status_child($child_id, $status) {
         $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set);  
        $this->db->set('child_status', $status, FALSE);
        $this->db->where('child_id', $child_id);
        $response = $this->db->update('Child');
        if ($response) {
            return "child Status updated successfully";
        } else {
            return "Error occuring while updating child Status";
        }
    }

    /*
     * Get all child
     */

    function get_all_child_trip($trip_id,$sort_order='child_name') {

        return $this->db->query("SELECT * FROM `Child` WHERE (`child_trip_no_pickup`='$trip_id' or `child_trip_no_drop_off`='$trip_id' ) and 	child_status='0' order by $sort_order asc ")->result_array();
    }
    
    // updated method for trip list
    
    function get_all_child_trip_not_in_the_list($child_ids,$sort_order='child_name') {
     $sub_query="(".implode(',', $child_ids).")";
     return $this->db->query("SELECT * FROM `Child` WHERE child_id in $sub_query and 	child_status='0' order by $sort_order asc ")->result_array();
        
    }

    /*
     * Get all child
     */

    function get_all_child_by_parent_id($parent_id) {

        return $this->db->query("SELECT * FROM `Child` left join Parent_child_mapping on Parent_child_mapping.child_id=Child.child_id WHERE Parent_child_mapping.parent_id='$parent_id' ")->result_array();
    }

    /*
     * function to delete child
     */

    function truncate_child() {
         $params_Set = array(
                        'child_list_updated_timestamp' => date('Y-m-d H:i:s')
                         );
         $set_id='';
         $this->Setting_model->update_setting($set_id,$params_Set);  
        $response = $this->db->truncate('Child');
        if ($response) {
            return "child deleted successfully";
        } else {
            return "Error occuring while deleting child";
        }
    }

    function get_total_count_child_trip($trip_id) {

        return $this->db->query("SELECT count(*) as 'count' FROM `Child` WHERE (`child_trip_no_pickup`='$trip_id' or `child_trip_no_drop_off`='$trip_id' ) and 	child_status='0'  ")->row_array();
    }

    /*
     * Get child by child_id and trip number
     */

    function get_child_with_trip_id($child_id, $trip_id) {
        $where = "(`child_trip_no_pickup` =$trip_id OR  `child_trip_no_drop_off` =$trip_id)";
        $this->db->where($where);
        return $this->db->get_where('Child', array('child_id' => $child_id))->row_array();
    }

    //count

    public function count() {
        $this->db->from('Child');
        return $this->db->count_all_results();
    }

    //supervisor json 

    function bus_child_details_pickup($bus_current_trip_id,$pickup_or_drop_off,$trip_type) {
   if($pickup_or_drop_off=='pickup'){
        $time_stamp = date("Y/m/d");
        $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_pickup_or_drop_off =", 'pickup');
        $this->db->where("Attendance.at_child_status ='present'");
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        return $this->db->get()->result_array();
        }else {
        $time_stamp = date("Y/m/d");          
             if($trip_type=='pickup')
            {
              $sub_query='child_trip_no_pickup';  
            }else {
                $sub_query='child_trip_no_drop_off';   
            }
            return $this->db->query("SELECT * FROM `Child` WHERE"
                    . " `child_id` not in (select at_child_id as  'child_id' from Attendance where at_trip_id='$bus_current_trip_id' and at_pickup_or_drop_off='drop off' "
                    . "and at_time_stamp BETWEEN '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'  ) "
                    . "and $sub_query ='$bus_current_trip_id'")->result_array();
        }
    return $this->db->get()->result_array();
    }

    function bus_child_details_not_present($bus_current_trip_id,$pickup_or_drop_off,$trip_type) {
        if($pickup_or_drop_off=='drop off'){
        $time_stamp = date("Y/m/d");
        $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_pickup_or_drop_off =", 'drop off');
        $this->db->where("Attendance.at_child_status ='present'");
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        return $this->db->get()->result_array();
        }else {
            $time_stamp = date("Y/m/d");          
            if($trip_type=='pickup')
            {
              $sub_query='child_trip_no_pickup';  
            }else {
                $sub_query='child_trip_no_drop_off';   
            }
            return $this->db->query("SELECT * FROM `Child` WHERE"
                    . " `child_id` not in (select at_child_id as  'child_id' from Attendance where at_trip_id='$bus_current_trip_id' and at_pickup_or_drop_off='pickup' "
                    . "and at_time_stamp BETWEEN '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'  ) "
                    . "and $sub_query ='$bus_current_trip_id'")->result_array();

        }
    }

    function bus_child_details_absent($bus_current_trip_id,$pickup_or_drop_off) {
        $time_stamp = date("Y/m/d");
        $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_pickup_or_drop_off =", 'pickup');
        $this->db->where("Attendance.at_child_status ='absent'");
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        return $this->db->get()->result_array();
    }

//        $this->db->select('*');
//        $this->db->from('Attendance a'); 
//        $this->db->join('Trip b', 'b.trip_id=a.at_trip_id', 'left');
//        $this->db->where('a.at_trip_id =', $bus_current_trip_id);
//        $query = $this->db->get(); 
//        return $query->result_array();
//    }
//     function get_all_child_not_on_bus($bus_id)
//    {
//       $this->db->where('child_bus_no_pickup=', $bus_id);
//       return $this->db->get('Child')->result_array();
//    }
    //super_   
    function get_total_child_trip($trip_id) {

        return $this->db->query("SELECT * FROM `Child` WHERE (`child_trip_no_pickup`='$trip_id' or `child_trip_no_drop_off`='$trip_id' )  ")->row_array();
    }
   /*
     * Get child by child_id
     */

    function get_child_name($child_id) {
        $name= $this->db->get_where('Child', array('child_id' => $child_id))->row_array();
        return $name['child_name'];
    }
    
    
     //Report

      function bus_child_details_pickup_report_pickup($bus_current_trip_id,$time_stamp,$table_name) {
       $this->db->select('*');
        $this->db->from('Child');
        $this->db->join($table_name, $table_name.'.at_child_id = Child.child_id');
        $this->db->where($table_name.".at_trip_id = ". $bus_current_trip_id);
        $this->db->where($table_name.".at_pickup_or_drop_off =", 'pickup');
        $this->db->where($table_name.".at_child_status ='present'");
        $this->db->where($table_name.".at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
         $this->db->order_by('Child.child_id', 'ASC');
        return $this->db->get()->result_array();
         }
    
  function bus_child_details_pickup_report_dropoff($bus_current_trip_id,$time_stamp,$table_name) {
       $this->db->select('*');
        $this->db->from('Child');
        $this->db->join($table_name, $table_name.'.at_child_id = Child.child_id');
        $this->db->where($table_name.".at_trip_id = ". $bus_current_trip_id);
        $this->db->where($table_name.".at_pickup_or_drop_off =", 'drop off');
        $this->db->where($table_name.".at_child_status ='present'");
        $this->db->where($table_name.".at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        return $this->db->get()->result_array();
         }
    
         


    function bus_child_details_absent_report($bus_current_trip_id,$time_stamp,$table_name) {
       $this->db->select('*');
        $this->db->from('Child');
        $this->db->join($table_name, $table_name.'.at_child_id = Child.child_id');
        $this->db->where($table_name.".at_trip_id = ". $bus_current_trip_id);
        $this->db->where($table_name.".at_pickup_or_drop_off =", 'pickup');
        $this->db->where($table_name.".at_child_status ='absent'");
        $this->db->where($table_name.".at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
         $this->db->group_by('Child.child_id', 'ASC');
        return $this->db->get()->result_array();
         }
         
                  
              //Json Supervisor

    function bus_child_details_pickup_report_pickup_json_supervisor($bus_current_trip_id,$time_stamp,$pickup_or_drop_off) {
       $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_pickup_or_drop_off =", $pickup_or_drop_off);
        //$this->db->where("Attendance.at_child_status ='present'");
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
         $this->db->order_by('Child.child_id', 'ASC');
        return $this->db->get()->result_array();
         }
    
  function bus_child_details_pickup_report_dropoff_json_supervisor($bus_current_trip_id,$time_stamp,$pickup_or_drop_off) {
       $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_pickup_or_drop_off =", $pickup_or_drop_off);
       // $this->db->where("Attendance.at_child_status ='present'");
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        return $this->db->get()->result_array();
         }
         
         
           function bus_child_details_for_time($bus_current_trip_id,$time_stamp,$pickup_or_drop_off) {
        $this->db->select('*');
        $this->db->from('Child');
        $this->db->join('Attendance', 'Attendance.at_child_id = Child.child_id');
        $this->db->where("Attendance.at_trip_id = ". $bus_current_trip_id);
        $this->db->where("Attendance.at_time_stamp BETWEEN  '$time_stamp 00:00:00' AND  '$time_stamp 23:59:59'");
        $this->db->group_by('Child.child_id');
        $this->db->order_by('Attendance.at_id', 'DESC');
        return $this->db->get()->result_array();
         }
         
          function count_pickup($pickup) {
             return $this->db->query(" SELECT COUNT( * ) AS total FROM Child WHERE  `child_bus_no_pickup` =$pickup")->row_array();
     } 
    
      function get_all_child_index_pickup($pickup,$limit = null, $offset = NULL) {
           $this->db->where("child_bus_no_pickup = ". $pickup);
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array(); 
    }
      function get_all_child_reg_num() {
      return $this->db->query("SELECT `child_nfc_id` FROM `Child`")->result_array();
      }
      
           function count_registration($registration) {
             return $this->db->query(" SELECT COUNT( * ) AS total FROM Child WHERE  `child_reg_no` ='$registration'")->row_array();
     } 
    function get_all_child_index_registration($registration,$limit = null, $offset = NULL) {
           $this->db->where("child_reg_no = '$registration'");
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array(); 
    }
    
    
    //child name search
    
  function count_child_name($child_name) {
             return $this->db->query(" SELECT COUNT( * ) AS total FROM Child WHERE `child_name` LIKE '%$child_name%'")->row_array();
     } 
     
    function get_all_child_index_child_name($child_name,$limit = null, $offset = NULL) {
           $this->db->where("child_name LIKE '%$child_name%'");
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array(); 
    }
    
    
    
        //child email search
    
  function count_child_email($email) {
             return $this->db->query(" SELECT COUNT( * ) AS total FROM Child WHERE `child_father_email_id` LIKE '%$email%'")->row_array();
     } 
     
    function get_all_child_index_child_email($email,$limit = null, $offset = NULL) {
           $this->db->where("child_father_email_id LIKE '%$email%'");
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array(); 
    }
    
        
    
        //child phone search
    
  function count_child_phone($phone) {
             return $this->db->query(" SELECT COUNT( * ) AS total FROM Child WHERE `child_father_tel` LIKE '%$phone%'")->row_array();
     } 
     
    function get_all_child_index_child_phone($phone,$limit = null, $offset = NULL) {
           $this->db->where("child_father_tel LIKE '%$phone%'");
        $this->db->limit($limit, $offset);
        return $this->db->get('Child')->result_array(); 
    }
    //------------------
    
    
    
    
    
    function get_child_count($email) {
//         $result=$this->db->get_where('Child', array('child_father_email_id' => $email))->row_array();
//        return $count = $result['COUNT(*)'];
        
 $query = $this->db->query("SELECT COUNT(child_father_email_id) as count FROM Child where child_father_email_id='$email'")->row_array();
 return $query['count'];
  
    } 
    
    
      function get_child_names($email) {
        return $this->db->query("SELECT child_name,child_nfc_id,child_reg_no FROM Child where child_father_email_id='$email'")->result_array();
         } 
    
    
    
    
        function get_child_id_using_phone_number($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_father_tel`='$key'")->row_array();
           return $id['child_id'];
    }
           function get_child_id_using_register_number($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_nfc_id`='$key' ")->row_array();
           return $id['child_id'];
    }      
    function get_child_id_using_nfc_id($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_nfc_id`='$key' ")->row_array();
           return $id['child_id'];
    }      
    function get_child_id_using_reg_no($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_reg_no`='$key' ")->row_array();
           return $id['child_id'];
    }      
    function get_child_id_using_email($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_father_email_id`='$key' ")->row_array();
           return $id['child_id'];
    }       function get_child_id_using_name($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_name`='$key'")->row_array();
           return $id['child_id'];
    }
     function get_child_id_using_school_register_number($key) {
           $id= $this->db->query("SELECT child_id FROM `Child` WHERE `child_reg_no`='$key' ")->row_array();
           return $id['child_id'];
    }     
    
        function get_child_id_using_phone_number_like($key) {
           $child= $this->db->query("SELECT * FROM `Child` WHERE `child_father_tel` like '%$key%' limit 10")->result_array();
           return $child;
    }
           function get_child_id_using_register_number_like($key) {
          // $child= $this->db->query("SELECT * FROM `Child` WHERE `child_nfc_id` like '%$key%' limit 10")->result_array();
           $child= $this->db->query("SELECT * FROM `Child` WHERE `child_reg_no` like '%$key%' limit 10")->result_array();
          return $child;
    }      
           function get_child_id_using_nfc_like($key) {
           $child= $this->db->query("SELECT * FROM `Child` WHERE `child_nfc_id` like '%$key%' limit 10")->result_array();
         //  $child= $this->db->query("SELECT * FROM `Child` WHERE `child_reg_no` like '%$key%' limit 10")->result_array();
          return $child;
    }      
    function get_child_id_using_email_like($key) {
           $child= $this->db->query("SELECT * FROM `Child` WHERE `child_father_email_id` like '%$key%' limit 10")->result_array();
           return $child;
    }       function get_child_id_using_name_like($key) {
           $child= $this->db->query("SELECT * FROM `Child` WHERE `child_name` like '%$key%' limit 10")->result_array();
          return $child;
    }
    
    
    function get_details_child_trip($trip_id) {

        return $this->db->query("SELECT * FROM `Child` WHERE (`child_trip_no_pickup`='$trip_id' or `child_trip_no_drop_off`='$trip_id' )  ")->result_array();
    } 
   function get_child_details($child_id) {
        return $this->db->get_where('Child', array('child_id' => $child_id))->row_array();
       
    } 
    
    
        function json_update_child($child_id, $params) {
         
        $this->db->where_in('child_id', $child_id);
        $response = $this->db->update('Child', $params);

    }
    
    function get_child_email_details($child_id) {
        return $this->db->get_where('Child', array('child_id' => $child_id))->result_array();
    }
    
        /*
     * Get all child
     */

    function get_all_child_with_bus_details() {
        $this->db->order_by('child_bus_no_pickup', 'ASC');
       return $this->db->get('Child')->result_array();
    }
    
    function get_count_all_student_by_nfc_id($child_nfc_id,$child_id){
        $this->db->where('child_nfc_id', $child_nfc_id);
        $this->db->where('child_id !=', $child_id);
        $this->db->from('Child');
        return $this->db->count_all_results();
    }
    function get_count_all_student_by_reg_id($child_reg_no,$child_id){
        $this->db->where('child_reg_no', $child_reg_no);
        $this->db->where('child_id !=', $child_id);
        $this->db->from('Child');
        return $this->db->count_all_results();
    }
    
       function get_all_classes() {
           return $this->db->query("SELECT DISTINCT child_class,child_section  FROM `Child` order by child_class,child_section")->row_array();
          
    } 
}

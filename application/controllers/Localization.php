<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Localization extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Localization_model');
        $this->load->model('Language_model');
        
    } 

    /*
     * Listing of localization
     */
    function index()
    {
         $data['page_title'] = 'Localization';
        $data['localization'] = $this->Localization_model->get_all_localization();
        $this->load->view('localization/index',$data);
    }

    /*
     * Adding a new localization
     */
    function add()
    {   
        $data['page_title'] = 'Localization';
        $data['languages'] = $this->Language_model->get_all_languages();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('language_name','Language Name','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'language_name' => $this->input->post('language_name'),
				'msg_pickup_home' => $this->input->post('msg_pickup_home'),
				'title_pickup_home' => $this->input->post('title_pickup_home'),
				'msg_pickup_school' => $this->input->post('msg_pickup_school'),
				'title_pickup_school' => $this->input->post('title_pickup_school'),
				'msg_dropoff_home' => $this->input->post('msg_dropoff_home'),
				'title_dropoff_home' => $this->input->post('title_dropoff_home'),
				'msg_dropoff_school' => $this->input->post('msg_dropoff_school'),
				'title_dropoff_school' => $this->input->post('title_dropoff_school'),
				'msg_pickup_absent' => $this->input->post('msg_pickup_absent'),
				'title_pickup_absent' => $this->input->post('title_pickup_absent'),
				'msg_dropoff_absent' => $this->input->post('msg_dropoff_absent'),
				'title_dropoff_absent' => $this->input->post('title_dropoff_absent'),
            );
            
            $localization_id = $this->Localization_model->add_localization($params);
            redirect('localization/index');
        }
        else
        {            
             $this->load->view('localization/add',$data);
        }
    }  

    /*
     * Editing a localization
     */
    function edit($localization_id)
    {   
        $data['page_title'] = 'Localization';
        // check if the localization exists before trying to edit it
         $data['languages'] = $this->Language_model->get_all_languages();
        $data['localization'] = $this->Localization_model->get_localization($localization_id);
        
        if(isset($data['localization']['localization_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('language_name','Language Name','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'language_name' => $this->input->post('language_name'),
					'msg_pickup_home' => $this->input->post('msg_pickup_home'),
					'title_pickup_home' => $this->input->post('title_pickup_home'),
					'msg_pickup_school' => $this->input->post('msg_pickup_school'),
					'title_pickup_school' => $this->input->post('title_pickup_school'),
					'msg_dropoff_home' => $this->input->post('msg_dropoff_home'),
					'title_dropoff_home' => $this->input->post('title_dropoff_home'),
					'msg_dropoff_school' => $this->input->post('msg_dropoff_school'),
					'title_dropoff_school' => $this->input->post('title_dropoff_school'),
					'msg_pickup_absent' => $this->input->post('msg_pickup_absent'),
					'title_pickup_absent' => $this->input->post('title_pickup_absent'),
					'msg_dropoff_absent' => $this->input->post('msg_dropoff_absent'),
					'title_dropoff_absent' => $this->input->post('title_dropoff_absent'),
                );

                $this->Localization_model->update_localization($localization_id,$params);            
                redirect('localization/index');
            }
            else
            {
                $this->load->view('localization/edit',$data);
            }
        }
        else
            show_error('The localization you are trying to edit does not exist.');
    } 

    /*
     * Deleting localization
     */
    function remove($localization_id)
    {
        $localization = $this->Localization_model->get_localization($localization_id);

        // check if the localization exists before trying to delete it
        if(isset($localization['localization_id']))
        {
            $this->Localization_model->delete_localization($localization_id);
            redirect('localization/index');
        }
        else
            show_error('The localization you are trying to delete does not exist.');
    }
    
}

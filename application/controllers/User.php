<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class User extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
        $this->load->model('common_model');
        if(!$this->User_model->auth_session()){
            redirect('Login');
       }
    } 

    /*
     * Listing of user
     */
    function index()
    {
        $data['page_title'] = 'User';
        $data['user'] = $this->User_model->get_all_user();

        $this->load->view('user/index',$data);
    }

    /*
     * Adding a new user
     */
    function add()
    {   
         $data['page_title'] = 'User Adding';
        $this->load->library('form_validation');
//print_r($_FILES['user_photo']['name']);
		$this->form_validation->set_rules('user_id','User Id','required');
		$this->form_validation->set_rules('user_name','User Name','required');
		$this->form_validation->set_rules('user_password','User Password','required');
		$this->form_validation->set_rules('user_gender','User Gender','required');
		$this->form_validation->set_rules('user_email','User Email','required');
//		$this->form_validation->set_rules('user_phone','User Phone','required');
//		$this->form_validation->set_rules('user_mobile','User Mobile','required');
//		$this->form_validation->set_rules('user_place','User Place','required');
//		$this->form_validation->set_rules('user_photo','User Photo','required');
//		$this->form_validation->set_rules('user_status','User Status','required');
//		$this->form_validation->set_rules('user_auth_code','User Auth Code','required');
//		$this->form_validation->set_rules('user_type','User Type','required');
            
                
                
         if($this->form_validation->run())     
        {   
//             print_r($_FILES); 
         if(!empty($_FILES['user_photo']['name'])){
             $updated_time=date('Y-m-d-H-i-s');
             $ext = explode(".", $_FILES['user_photo']['name']);
            $real_name='std_'. date('Y-m-d-H-i-s') . '_' . uniqid().'.'.$ext[1];
          //image upload
          $file_name='emp_'. date('Y-m-d-H-i-s') . '_' . uniqid();
                $config['file_name']  = $real_name;
                $config['upload_path'] = FCPATH."uploads/admin/";
		$config['allowed_types'] = 'gif|jpg|png';
//		$config['max_size']	= '500';
//		$config['max_width']  = '1024';
//		$config['max_height']  = '768'; 
//                print_r($config);
          $status_upload=$this->common_model->do_upload($config,'user_photo');
         // print_r($status_upload); exit();
             }
 else {
     $real_name='';
       $updated_time=date('Y-m-d-H-i-s');
 }
             
//            if($status_upload['status']=='true')
//            {
//                echo $status_upload['status'];
//            }
// else {
//      echo $status_upload['status'];
// }
             
             
            $params = array(
				'user_id' => $this->input->post('user_id'),
				'user_name' => $this->input->post('user_name'),
				'user_password' => $this->input->post('user_password'),
				'user_gender' => $this->input->post('user_gender'),
				'user_email' => $this->input->post('user_email'),
				'user_phone' => $this->input->post('user_phone'),
				'user_mobile' => $this->input->post('user_mobile'),
				'user_place' => $this->input->post('user_place'),
				'user_status' => '0',
				'user_auth_code' => $this->input->post('user_auth_code'),
				'user_type' => '1',
				'user_updated_timestamp' => $updated_time,
                                'user_photo' => $real_name,
            );
           
         
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        }
        else
        {
            $this->load->view('user/add',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($id)
    {   
       
         $data['page_title'] = 'User Editing';
        // check if the user exists before trying to edit it
        $user = $this->User_model->get_user($id);
        
        if(isset($user['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('user_id','User Id','required');
			$this->form_validation->set_rules('user_name','User Name','required');
			$this->form_validation->set_rules('user_password','User Password','required');
			$this->form_validation->set_rules('user_gender','User Gender','required');
			$this->form_validation->set_rules('user_email','User Email','required');
//			$this->form_validation->set_rules('user_phone','User Phone','required');
//			$this->form_validation->set_rules('user_mobile','User Mobile','required');
//			$this->form_validation->set_rules('user_place','User Place','required');
////			$this->form_validation->set_rules('user_photo','User Photo','required');
//			$this->form_validation->set_rules('user_status','User Status','required');
//			$this->form_validation->set_rules('user_auth_code','User Auth Code','required');
//			$this->form_validation->set_rules('user_type','User Type','required');
		
			if($this->form_validation->run())     
            {   
                            
                        
                   if(!empty($_FILES['user_photo']['name'])){
                           //image upload
                        $ext = explode(".", $_FILES['user_photo']['name']);
                        $real_name='std_'. date('Y-m-d-H-i-s') . '_' . uniqid().'.'.$ext[1];
                        //image upload
                        $file_name='emp_'. date('Y-m-d-H-i-s') . '_' . uniqid();
                        $config['file_name']  = $real_name;
                        $config['upload_path'] = FCPATH."uploads/admin/";
                        $config['allowed_types'] = 'gif|jpg|png';
                        $config['max_size']	= '500';
                        $config['max_width']  = '1024';
                        $config['max_height']  = '768'; 
                        //                print_r($config);
                        $status_upload=$this->common_model->do_upload($config,'user_photo');
                         $updated_time=date('Y-m-d-H-i-s');
                         $params = array(
					'user_id' => $this->input->post('user_id'),
					'user_name' => $this->input->post('user_name'),
					'user_password' => $this->input->post('user_password'),
					'user_gender' => $this->input->post('user_gender'),
					'user_email' => $this->input->post('user_email'),
					'user_phone' => $this->input->post('user_phone'),
					'user_mobile' => $this->input->post('user_mobile'),
					'user_place' => $this->input->post('user_place'),
					'user_photo' => $real_name,
					'user_status' => $this->input->post('user_status'),
					'user_auth_code' => $this->input->post('user_auth_code'),
					'user_type' => '1',
					'user_updated_timestamp' => $updated_time,
                );
                    
                    
                           }
                           else
                           {
                                 $updated_time=date('Y-m-d-H-i-s');
                                 $params = array(
					'user_id' => $this->input->post('user_id'),
					'user_name' => $this->input->post('user_name'),
					'user_password' => $this->input->post('user_password'),
					'user_gender' => $this->input->post('user_gender'),
					'user_email' => $this->input->post('user_email'),
					'user_phone' => $this->input->post('user_phone'),
					'user_mobile' => $this->input->post('user_mobile'),
					'user_place' => $this->input->post('user_place'),
					'user_status' => $this->input->post('user_status'),
					'user_auth_code' => $this->input->post('user_auth_code'),
					'user_type' => '1',
					'user_updated_timestamp' => $updated_time,
                );
                           }
                   

                $this->User_model->update_user($id,$params);            
                redirect('user/index');
            }
            else
            {   
                $data['user'] = $this->User_model->get_user($id);
    
                $this->load->view('user/edit',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($id)
    {
        $data['page_title'] = 'User Deleting';
        $user = $this->User_model->get_user($id);

        // check if the user exists before trying to delete it
        if(isset($user['id']))
        {
            $this->User_model->delete_user($id);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
    
     function change_status()
    {
      $user_id =  $this->uri->segment(3);
      $user_status =  $this->uri->segment(4);
         if($user_status==0)
         {
             $status=1;
         }
         else
         {
             $status=0;
         }
      // echo $status;
        // check if the child exists before trying to update it
        if($user_id)
        {
           $this->User_model->status_user($user_id,$status);
            redirect('user/index');
        }
        else
            show_error('The child you are trying to delete does not exist.');
    } 
}
